import{_,C as y,A as D,c as E,w as u,r as m,k as v,p as w,o as l,a as e,t as a,i as I,b as n,d as p,e as k,f as x,n as f,g as d,v as c,h,l as C,F as M,j as V}from"./index-B6tcRC6e.js";const A={name:"DeviceForm",components:{AppLayout:D,CardComponent:y},data(){return{device:{device_id:"",name:"",device_type:"",serial_number:"",imei:"",firmware_version:"",is_active:!0,pet_id:""},pets:[],isLoading:!1,errors:{},globalError:null,requiredFields:["device_id"]}},computed:{isEditMode(){return this.$route.path.includes("/edit")},deviceId(){return this.$route.params.id}},mounted(){this.fetchPets(),this.isEditMode&&this.fetchDeviceDetails()},methods:{async fetchPets(){try{const s=await w.getAll();this.pets=s.data}catch(s){console.error("Error fetching pets:",s),this.globalError="Failed to load pets list. Please try again."}},async fetchDeviceDetails(){try{this.isLoading=!0,console.log("Fetching device details for ID:",this.deviceId);const s=await v.getById(this.deviceId);console.log("Device details received:",s.data);const i={...s.data};i.pet_id===null&&(i.pet_id=""),this.device=i,this.isLoading=!1}catch(s){console.error("Error fetching device details:",s),this.isLoading=!1,this.globalError="Failed to load device details. Please try again.",s.response&&console.error("Error response:",s.response.status,s.response.data),s.response&&s.response.status===404&&this.$router.push("/devices")}},async saveDevice(){this.isLoading=!0,this.errors={},this.globalError=null;try{if(this.validateForm(),Object.keys(this.errors).length===0){if(console.log("Saving device:",this.device),this.isEditMode){const s=await v.update(this.deviceId,this.device);console.log("Device updated successfully:",s.data)}else{const s=await v.create(this.device);console.log("Device created successfully:",s.data)}this.$router.push("/devices")}else this.isLoading=!1}catch(s){console.error("Error saving device:",s),this.isLoading=!1,s.response?(this.globalError=s.response.data.error||"Failed to save device. Please try again.",s.response.data.errors&&(this.errors={...this.errors,...s.response.data.errors})):this.globalError="Network error. Please check your connection and try again."}},validateForm(){return this.errors={},this.globalError=null,this.requiredFields.forEach(s=>{(!this.device[s]||this.device[s].trim()==="")&&(this.errors[s]=`${s.charAt(0).toUpperCase()+s.slice(1).replace("_"," ")} is required`)}),this.device.device_id&&!this.isEditMode&&(/^[A-Za-z0-9]{10}$/.test(this.device.device_id)||(this.errors.device_id="Device ID must be exactly 10 alphanumeric characters")),Object.keys(this.errors).length===0},formatDeviceId(){this.device.device_id&&(this.device.device_id=this.device.device_id.replace(/[^A-Za-z0-9]/g,""),this.device.device_id.length>10&&(this.device.device_id=this.device.device_id.substring(0,10)),this.device.device_id=this.device.device_id.toUpperCase())}}},F={class:"page-header"},N={class:"d-flex align-items-center"},P={class:"page-title mb-0"},S={class:"form-container"},L={key:0,class:"alert alert-danger mb-3"},U={class:"form-row"},T={class:"form-group"},q=["disabled"],B={key:0,class:"invalid-feedback d-block"},z={key:1,class:"text-muted"},O={class:"form-group"},j={class:"input-wrapper"},G={class:"form-row"},Z={class:"form-group"},J={class:"input-wrapper"},H={class:"form-group"},K={class:"input-wrapper"},Q={class:"form-row"},R={class:"form-group"},W={class:"input-wrapper"},X={class:"form-group"},Y={class:"input-wrapper"},$={class:"form-group"},ee={class:"form-check form-switch"},ie={class:"form-group"},se={class:"input-wrapper"},te=["value"],re={class:"form-actions"},oe=["disabled"];function de(s,i,le,ae,t,o){const b=m("card-component"),g=m("app-layout");return l(),E(g,null,{default:u(()=>[e("div",F,[e("div",N,[e("button",{class:"btn btn-outline-secondary me-3",onClick:i[0]||(i[0]=r=>s.$router.go(-1))},i[12]||(i[12]=[e("i",{class:"bi bi-arrow-left"},null,-1)])),e("h1",P,a(o.isEditMode?"Edit Device":"Add New Device"),1)])]),e("div",S,[I(b,{title:o.isEditMode?"Edit Device Information":"Device Information",icon:"bi bi-pencil-square"},{default:u(()=>[t.globalError?(l(),n("div",L,a(t.globalError),1)):p("",!0),e("form",{onSubmit:i[11]||(i[11]=k((...r)=>o.saveDevice&&o.saveDevice(...r),["prevent"]))},[e("div",U,[e("div",T,[i[14]||(i[14]=e("label",{for:"deviceId",class:"form-label"},[x(" Device ID "),e("span",{class:"text-danger"},"*")],-1)),e("div",{class:f(["input-wrapper",{"is-invalid":t.errors.device_id}])},[d(e("input",{type:"text",id:"deviceId","onUpdate:modelValue":i[1]||(i[1]=r=>t.device.device_id=r),class:f(["form-control",{"is-invalid":t.errors.device_id}]),disabled:o.isEditMode,placeholder:"Enter 10-digit device ID (e.g., JT12345678)",maxlength:"10",pattern:"^[A-Za-z0-9]{10}$",onInput:i[2]||(i[2]=(...r)=>o.formatDeviceId&&o.formatDeviceId(...r))},null,42,q),[[c,t.device.device_id]]),i[13]||(i[13]=e("small",{class:"device-id-format"},"Format: 10 characters (letters and numbers)",-1))],2),t.errors.device_id?(l(),n("div",B,a(t.errors.device_id),1)):p("",!0),o.isEditMode?p("",!0):(l(),n("small",z," Enter the unique 10-digit ID provided with your GPS tracker "))]),e("div",O,[i[15]||(i[15]=e("label",{for:"deviceName",class:"form-label"},"Device Name",-1)),e("div",j,[d(e("input",{type:"text",id:"deviceName","onUpdate:modelValue":i[3]||(i[3]=r=>t.device.name=r),class:"form-control",placeholder:"Enter a name for this device"},null,512),[[c,t.device.name]])])])]),e("div",G,[e("div",Z,[i[17]||(i[17]=e("label",{for:"deviceType",class:"form-label"},"Device Type",-1)),e("div",J,[d(e("select",{id:"deviceType","onUpdate:modelValue":i[4]||(i[4]=r=>t.device.device_type=r),class:"form-select"},i[16]||(i[16]=[e("option",{value:"",disabled:"",selected:""},"Select a device type",-1),e("option",{value:"GPS Collar"},"GPS Collar",-1),e("option",{value:"Smart Tag"},"Smart Tag",-1),e("option",{value:"Tracker"},"Tracker",-1),e("option",{value:"Other"},"Other",-1)]),512),[[h,t.device.device_type]])])]),e("div",H,[i[18]||(i[18]=e("label",{for:"serialNumber",class:"form-label"},"Serial Number",-1)),e("div",K,[d(e("input",{type:"text",id:"serialNumber","onUpdate:modelValue":i[5]||(i[5]=r=>t.device.serial_number=r),class:"form-control",placeholder:"Enter serial number (if available)"},null,512),[[c,t.device.serial_number]])])])]),e("div",Q,[e("div",R,[i[19]||(i[19]=e("label",{for:"imei",class:"form-label"},"IMEI Number",-1)),e("div",W,[d(e("input",{type:"text",id:"imei","onUpdate:modelValue":i[6]||(i[6]=r=>t.device.imei=r),class:"form-control",placeholder:"Enter IMEI number (if available)"},null,512),[[c,t.device.imei]])])]),e("div",X,[i[20]||(i[20]=e("label",{for:"firmwareVersion",class:"form-label"},"Firmware Version",-1)),e("div",Y,[d(e("input",{type:"text",id:"firmwareVersion","onUpdate:modelValue":i[7]||(i[7]=r=>t.device.firmware_version=r),class:"form-control",placeholder:"Enter firmware version (if known)"},null,512),[[c,t.device.firmware_version]])])])]),e("div",$,[e("div",ee,[d(e("input",{class:"form-check-input",type:"checkbox",id:"isActive","onUpdate:modelValue":i[8]||(i[8]=r=>t.device.is_active=r)},null,512),[[C,t.device.is_active]]),i[21]||(i[21]=e("label",{class:"form-check-label",for:"isActive"},"Device is active",-1))])]),e("div",ie,[i[23]||(i[23]=e("label",{for:"petId",class:"form-label"},"Assign to Pet",-1)),e("div",se,[d(e("select",{id:"petId","onUpdate:modelValue":i[9]||(i[9]=r=>t.device.pet_id=r),class:"form-select"},[i[22]||(i[22]=e("option",{value:""},"Not assigned",-1)),(l(!0),n(M,null,V(t.pets,r=>(l(),n("option",{key:r.id,value:r.id},a(r.name),9,te))),128))],512),[[h,t.device.pet_id]])])]),e("div",re,[e("button",{type:"button",class:"btn btn-secondary",onClick:i[10]||(i[10]=r=>s.$router.go(-1))}," Cancel "),e("button",{type:"submit",class:"btn btn-primary",disabled:t.isLoading},a(t.isLoading?"Saving...":o.isEditMode?"Update Device":"Add Device"),9,oe)])],32)]),_:1},8,["title"])])]),_:1})}const ce=_(A,[["render",de],["__scopeId","data-v-346698ba"]]);export{ce as default};
