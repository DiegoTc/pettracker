import{_ as f,C as v,A as y,c as w,w as _,r as k,p as b,o as l,a as e,b as n,d as m,t as c,e as E,f as g,n as d,g as a,v as p,h as P}from"./index-B6tcRC6e.js";const x={name:"PetForm",components:{AppLayout:y,CardComponent:v},data(){return{pet:{name:"",pet_type:"",breed:"",color:"",weight:null,birthdate:"",description:"",image_url:null},isLoading:!1,errors:{},globalError:null,requiredFields:["name","pet_type"]}},computed:{isEditMode(){return this.$route.path.includes("/edit")},petId(){return this.$route.params.id}},mounted(){this.isEditMode&&this.fetchPetDetails()},methods:{async fetchPetDetails(){try{this.isLoading=!0,console.log("Fetching pet details for ID:",this.petId);const r=await b.getById(this.petId);console.log("Pet details received:",r.data);const t={...r.data};if(t.birthdate){const u=new Date(t.birthdate);isNaN(u.getTime())||(t.birthdate=u.toISOString().split("T")[0])}this.pet=t,this.isLoading=!1}catch(r){console.error("Error fetching pet details:",r),this.isLoading=!1,this.globalError="Failed to load pet details. Please try again.",r.response&&console.error("Error response:",r.response.status,r.response.data),r.response&&r.response.status===404&&this.$router.push("/pets")}},async savePet(){this.isLoading=!0,this.errors={};try{if(this.validateForm(),Object.keys(this.errors).length===0){if(console.log("Saving pet:",this.pet),this.isEditMode){const r=await b.update(this.petId,this.pet);console.log("Pet updated successfully:",r.data)}else{const r=await b.create(this.pet);console.log("Pet created successfully:",r.data)}this.$router.push("/pets")}else this.isLoading=!1}catch(r){console.error("Error saving pet:",r),this.isLoading=!1,r.response?(this.globalError=r.response.data.error||"Failed to save pet. Please try again.",r.response.data.errors&&(this.errors={...this.errors,...r.response.data.errors})):this.globalError="Network error. Please check your connection and try again."}},handleImageUpload(r){const t=r.target.files[0];t&&(this.pet.image_url=URL.createObjectURL(t))},removeImage(){this.pet.image_url=null},validateForm(){return this.errors={},this.globalError=null,this.requiredFields.forEach(r=>{(!this.pet[r]||this.pet[r].trim()==="")&&(this.errors[r]=`${r.charAt(0).toUpperCase()+r.slice(1).replace("_"," ")} is required`)}),this.pet.weight!==null&&this.pet.weight!==""&&this.pet.weight<=0&&(this.errors.weight="Weight must be greater than 0"),Object.keys(this.errors).length===0}}},I={class:"card border-0 shadow-sm mb-4"},C={class:"card-body"},U={key:0,class:"alert alert-danger mb-3"},D={class:"mb-3"},L={key:0,class:"invalid-feedback d-block"},V={class:"row"},B={class:"col-md-6 mb-3"},F={key:0,class:"invalid-feedback d-block"},N={class:"col-md-6 mb-3"},M={class:"input-wrapper"},S={class:"row"},T={class:"col-md-6 mb-3"},O={class:"input-wrapper"},j={class:"col-md-6 mb-3"},A={key:0,class:"invalid-feedback d-block"},q={class:"mb-3"},R={class:"input-wrapper"},W={class:"mb-3"},z={class:"input-wrapper"},G={class:"mb-3"},H={class:"image-upload-container"},J={key:0,class:"image-preview rounded"},K=["src"],Q={key:1,class:"image-upload rounded border d-flex justify-content-center align-items-center p-4",style:{height:"180px",cursor:"pointer"}},X={class:"d-flex justify-content-end gap-2 mt-4"},Y={type:"submit",class:"btn btn-primary"};function Z(r,t,u,$,s,i){const h=k("app-layout");return l(),w(h,null,{default:_(()=>[e("div",I,[e("div",C,[t[22]||(t[22]=e("div",{class:"d-flex align-items-center mb-3"},[e("i",{class:"bi bi-pencil-square text-primary me-2"}),e("h5",{class:"card-title mb-0"},"Pet Information")],-1)),s.globalError?(l(),n("div",U,c(s.globalError),1)):m("",!0),e("form",{onSubmit:t[10]||(t[10]=E((...o)=>i.savePet&&i.savePet(...o),["prevent"]))},[e("div",D,[t[11]||(t[11]=e("label",{for:"petName",class:"form-label"},[g(" Pet Name "),e("span",{class:"text-danger"},"*")],-1)),e("div",{class:d(["input-wrapper",{"is-invalid":s.errors.name}])},[a(e("input",{type:"text",id:"petName","onUpdate:modelValue":t[0]||(t[0]=o=>s.pet.name=o),class:d(["form-control",{"is-invalid":s.errors.name}]),placeholder:"Enter pet name"},null,2),[[p,s.pet.name]])],2),s.errors.name?(l(),n("div",L,c(s.errors.name),1)):m("",!0)]),e("div",V,[e("div",B,[t[13]||(t[13]=e("label",{for:"petType",class:"form-label"},[g(" Pet Type "),e("span",{class:"text-danger"},"*")],-1)),e("div",{class:d(["input-wrapper",{"is-invalid":s.errors.pet_type}])},[a(e("select",{id:"petType","onUpdate:modelValue":t[1]||(t[1]=o=>s.pet.pet_type=o),class:d(["form-select",{"is-invalid":s.errors.pet_type}])},t[12]||(t[12]=[e("option",{value:"",disabled:"",selected:""},"Select a pet type",-1),e("option",{value:"Dog"},"Dog",-1),e("option",{value:"Cat"},"Cat",-1),e("option",{value:"Bird"},"Bird",-1),e("option",{value:"Other"},"Other",-1)]),2),[[P,s.pet.pet_type]])],2),s.errors.pet_type?(l(),n("div",F,c(s.errors.pet_type),1)):m("",!0)]),e("div",N,[t[14]||(t[14]=e("label",{for:"breed",class:"form-label"},"Breed",-1)),e("div",M,[a(e("input",{type:"text",id:"breed","onUpdate:modelValue":t[2]||(t[2]=o=>s.pet.breed=o),class:"form-control",placeholder:"Enter breed"},null,512),[[p,s.pet.breed]])])])]),e("div",S,[e("div",T,[t[15]||(t[15]=e("label",{for:"color",class:"form-label"},"Color",-1)),e("div",O,[a(e("input",{type:"text",id:"color","onUpdate:modelValue":t[3]||(t[3]=o=>s.pet.color=o),class:"form-control",placeholder:"Enter color"},null,512),[[p,s.pet.color]])])]),e("div",j,[t[16]||(t[16]=e("label",{for:"weight",class:"form-label"},"Weight (kg)",-1)),e("div",{class:d(["input-wrapper",{"is-invalid":s.errors.weight}])},[a(e("input",{type:"number",id:"weight","onUpdate:modelValue":t[4]||(t[4]=o=>s.pet.weight=o),class:d(["form-control",{"is-invalid":s.errors.weight}]),step:"0.1",min:"0",placeholder:"Enter weight"},null,2),[[p,s.pet.weight]])],2),s.errors.weight?(l(),n("div",A,c(s.errors.weight),1)):m("",!0)])]),e("div",q,[t[17]||(t[17]=e("label",{for:"birthdate",class:"form-label"},"Birthdate",-1)),e("div",R,[a(e("input",{type:"date",id:"birthdate","onUpdate:modelValue":t[5]||(t[5]=o=>s.pet.birthdate=o),class:"form-control"},null,512),[[p,s.pet.birthdate]])])]),e("div",W,[t[18]||(t[18]=e("label",{for:"description",class:"form-label"},"Description",-1)),e("div",z,[a(e("textarea",{id:"description","onUpdate:modelValue":t[6]||(t[6]=o=>s.pet.description=o),class:"form-control",rows:"3",placeholder:"Enter a description about your pet"},null,512),[[p,s.pet.description]])])]),e("div",G,[t[21]||(t[21]=e("label",{for:"image",class:"form-label"},"Pet Image",-1)),e("div",H,[s.pet.image_url?(l(),n("div",J,[e("img",{src:s.pet.image_url,alt:"Pet preview",class:"img-fluid"},null,8,K),e("button",{type:"button",class:"btn-remove-image",onClick:t[7]||(t[7]=(...o)=>i.removeImage&&i.removeImage(...o))},t[19]||(t[19]=[e("i",{class:"bi bi-x-circle-fill"},null,-1)]))])):(l(),n("div",Q,[t[20]||(t[20]=e("label",{for:"image",class:"upload-label text-center m-0"},[e("i",{class:"bi bi-cloud-upload fs-3 d-block mb-2 text-primary"}),e("span",{class:"text-muted"},"Click to upload image")],-1)),e("input",{type:"file",id:"image",onChange:t[8]||(t[8]=(...o)=>i.handleImageUpload&&i.handleImageUpload(...o)),accept:"image/*",hidden:""},null,32)]))])]),e("div",X,[e("button",{type:"button",class:"btn btn-light border",onClick:t[9]||(t[9]=o=>r.$router.go(-1))}," Cancel "),e("button",Y,c(i.isEditMode?"Update Pet":"Add Pet"),1)])],32)])])]),_:1})}const te=f(x,[["render",Z],["__scopeId","data-v-f3ffb9c4"]]);export{te as default};
